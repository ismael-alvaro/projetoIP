import pygame
import random

# iniciar jogo:
pygame.init()

# nome do jogo:
pygame.display.set_caption("Jogo Snake Python")
largura, altura = 800, 600
tela = pygame.display.set_mode((largura, altura))  # setar o tamanho da tela
relogio = pygame.time.Clock()

# cores:
preta = (0, 0, 0)
branca = (255, 255, 255)
vermelha = (255, 0, 0)
verde = (0, 255, 0)
azul = (0, 0, 255)
amarelo = (255, 255, 0)

# parâmetros da cobrinha:
tamanho_quadrado = 10
velocidade_jogo = 15

# função para gerar comida:
def gerar_comida(pixels):
    tipos_comida = [
        {"cor": verde, "pontos": 1},
        {"cor": azul, "pontos": 2},
        {"cor": amarelo, "pontos": 3}
    ]
    tipo_comida = random.choice(tipos_comida)
    comida_x = round(random.randrange(0, largura - tamanho_quadrado) / 10.0) * 10.0
    comida_y = round(random.randrange(0, altura - tamanho_quadrado) / 10.0) * 10.0
    while [comida_x, comida_y] in pixels: #impedir que a comida apareça na mesma localização da cobra
        comida_x = round(random.randrange(0, largura - tamanho_quadrado) / 10.0) * 10.0
        comida_y = round(random.randrange(0, altura - tamanho_quadrado) / 10.0) * 10.0
    return comida_x, comida_y, tipo_comida["cor"], tipo_comida["pontos"]

# função para desenhar comida:
def desenhar_comida(tamanho, comida_x, comida_y, cor):
    pygame.draw.rect(tela, cor, [comida_x, comida_y, tamanho, tamanho])

# função para desenhar cobra:
def desenhar_cobra(tamanho, pixels):
    for pixel in pixels:
        pygame.draw.rect(tela, branca, [pixel[0], pixel[1], tamanho, tamanho])

# função para desenhar pontuação:
def desenhar_pontuacao(pontuacao):
    fonte = pygame.font.SysFont("Helvetica", 35)
    texto = fonte.render(f"Pontos: {pontuacao}", True, vermelha)
    tela.blit(texto, [10, 10])

# função selecionar velocidade:
def selecionar_velocidade(tecla, velocidade_x, velocidade_y):
    if tecla == pygame.K_DOWN:
        if velocidade_y != -tamanho_quadrado: #impedir que a cobra se movimente para o lado contrário daquele para o qual ela está andando
            velocidade_x = 0
            velocidade_y = tamanho_quadrado
    elif tecla == pygame.K_UP:
        if velocidade_y != tamanho_quadrado:
            velocidade_x = 0
            velocidade_y = -tamanho_quadrado
    elif tecla == pygame.K_RIGHT:
        if velocidade_x != -tamanho_quadrado:
            velocidade_x = tamanho_quadrado
            velocidade_y = 0
    elif tecla == pygame.K_LEFT:
        if velocidade_x != tamanho_quadrado:
            velocidade_x = -tamanho_quadrado
            velocidade_y = 0
    return velocidade_x, velocidade_y

# função para exibir tela de fim de jogo:
def fim_de_jogo(pontuacao):
    fim_jogo = True
    while fim_jogo:
        tela.fill(preta)
        fonte = pygame.font.SysFont("Helvetica", 50)
        mensagem = fonte.render("Fim de Jogo", True, vermelha)
        pontuacao_texto = fonte.render(f"Pontuação: {pontuacao}", True, branca)
        reiniciar = fonte.render("Pressione ENTER para Jogar Novamente", True, branca)
        tela.blit(mensagem, (largura / 2 - mensagem.get_width() / 2, altura / 3))
        tela.blit(pontuacao_texto, (largura / 2 - pontuacao_texto.get_width() / 2, altura / 2))
        tela.blit(reiniciar, (largura / 2 - reiniciar.get_width() / 2, altura / 1.5))

        pygame.display.update()

        for evento in pygame.event.get():
            if evento.type == pygame.QUIT:
                pygame.quit()
                quit()
            if evento.type == pygame.KEYDOWN:
                if evento.key == pygame.K_RETURN:
                    fim_jogo = False
                    menu_principal()

# função para rodar jogo(contem o loop do jogo):
def rodar_jogo():
    fim_jogo = False
    # posição inicial da cobra:
    x = largura / 2
    y = altura / 2

    # velocidades da cobra em relação a pixels:
    velocidade_x = 0
    velocidade_y = 0

    tamanho_cobra = 1
    pixels = []
    pontuacao = 0

    # gerar comida, apenas uma inicialmente:
    comida_x, comida_y, cor_comida, pontos_comida = gerar_comida(pixels)

    while not fim_jogo:
        tela.fill(preta)  # cor do fundo

        for evento in pygame.event.get():
            if evento.type == pygame.QUIT:  # acabou o jogo
                fim_jogo = True

            elif evento.type == pygame.KEYDOWN:
                velocidade_x, velocidade_y = selecionar_velocidade(evento.key, velocidade_x, velocidade_y)

        # atualizar posição da cobra:
        x += velocidade_x
        y += velocidade_y

        # verificar se a cobra bateu na borda:
        if x < 0 or x >= largura or y < 0 or y >= altura:
            fim_jogo = True

        # desenhar comida:
        desenhar_comida(tamanho_quadrado, comida_x, comida_y, cor_comida)

        # desenhar cobra:
        pixels.append([x, y])
        if len(pixels) > tamanho_cobra:
            del pixels[0]

        # verificar se ele tá batendo:
        for pixel in pixels[:-1]:
            if pixel == [x, y]:
                fim_jogo = True

        desenhar_cobra(tamanho_quadrado, pixels)
        desenhar_pontuacao(pontuacao)

        # atualizar na tela:
        pygame.display.update()

        # criar uma nova comida:
        if x == comida_x and y == comida_y:
            tamanho_cobra += 1
            pontuacao += pontos_comida
            comida_x, comida_y, cor_comida, pontos_comida = gerar_comida(pixels)
        relogio.tick(velocidade_jogo)

    fim_de_jogo(pontuacao)

# função para exibir o menu principal:
def menu_principal():
    menu = True
    while menu:
        tela.fill(preta)

        fonte = pygame.font.SysFont("Helvetica", 50)
        titulo = fonte.render("Jogo Snake Python", True, verde)
        jogar = fonte.render("Pressione ENTER para Jogar", True, branca)

        tela.blit(titulo, (largura / 2 - titulo.get_width() / 2, altura / 3))
        tela.blit(jogar, (largura / 2 - jogar.get_width() / 2, altura / 2))

        pygame.display.update()

        for evento in pygame.event.get():
            if evento.type == pygame.QUIT:
                pygame.quit()
                quit()
            if evento.type == pygame.KEYDOWN:
                if evento.key == pygame.K_RETURN:
                    menu = False

    rodar_jogo()

# exibir o menu principal:
menu_principal()
